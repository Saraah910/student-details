{
  "address": "0x562Dd45BDe4D93B7DdC83C0550aF3e9968DF071B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entranceFees",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "details__NotSufficientAge",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "details__NotSufficientAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "details__SeatsFullfilled",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "age",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "add",
          "type": "string"
        }
      ],
      "name": "EntreDetails",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "ShowDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "Name",
              "type": "string"
            },
            {
              "internalType": "uint16",
              "name": "Age",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "Id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "Address",
              "type": "string"
            }
          ],
          "internalType": "struct data.Details",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ShowTotalFunds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDetailCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntranceFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x2ca9dc6a3188a8a16b0a7801b05ba0de1fb7654d5f5eaec77a88262f0c6d7e7c",
  "receipt": {
    "to": null,
    "from": "0xCfeFf4ea629aA00C55983a764eE17135cEa22869",
    "contractAddress": "0x562Dd45BDe4D93B7DdC83C0550aF3e9968DF071B",
    "transactionIndex": 46,
    "gasUsed": "665488",
    "logsBloom": "0x
    "blockHash": "0x25582799dc32c3b5e23adcfb836bcdfd37a42140d6fb43a35a302b27fe3a0e8e",
    "transactionHash": "0x2ca9dc6a3188a8a16b0a7801b05ba0de1fb7654d5f5eaec77a88262f0c6d7e7c",
    "logs": [],
    "blockNumber": 8704995,
    "cumulativeGasUsed": "6114355",
    "status": 1,
    "byzantium": true
  },
  "args": [
    1
  ],
  "numDeployments": 1,
  "solcInputHash": "9f70f5e9cb393284f21a850bead4971e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entranceFees\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"details__NotSufficientAge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"details__NotSufficientAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"details__SeatsFullfilled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"age\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"add\",\"type\":\"string\"}],\"name\":\"EntreDetails\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ShowDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"Name\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"Age\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"Id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"Address\",\"type\":\"string\"}],\"internalType\":\"struct data.Details\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ShowTotalFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDetailCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntranceFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/details.sol\":\"data\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/details.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nerror details__NotSufficientAge();\\r\\nerror details__SeatsFullfilled();\\r\\nerror details__NotSufficientAmount();\\r\\n\\r\\ncontract data{\\r\\n\\r\\n    uint256 private immutable i_entranceFees;\\r\\n\\r\\n    struct Details{\\r\\n        string Name;\\r\\n        uint16 Age;\\r\\n        uint256 Id;\\r\\n        string Address;\\r\\n    }\\r\\n    mapping(address => Details) private s_details;\\r\\n    address[] private s_players;\\r\\n\\r\\n    constructor(uint256 entranceFees){\\r\\n        i_entranceFees = entranceFees;\\r\\n    }\\r\\n\\r\\n    modifier Entry(){\\r\\n        if(msg.value >= i_entranceFees){\\r\\n            _;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function EntreDetails( \\r\\n        string memory name, \\r\\n        uint16 age, \\r\\n        uint256 id, \\r\\n        string memory add \\r\\n        ) Entry public payable {\\r\\n            \\r\\n        if(age < 18){\\r\\n            revert details__NotSufficientAge();\\r\\n        }\\r\\n        if(s_players.length > 25){\\r\\n            revert details__SeatsFullfilled();\\r\\n        }\\r\\n        if(msg.value < i_entranceFees){\\r\\n            revert details__NotSufficientAmount();\\r\\n        }\\r\\n        Details memory d1 = Details({\\r\\n            Name: name,\\r\\n            Age: age,\\r\\n            Id: id,\\r\\n            Address: add\\r\\n        });\\r\\n        s_details[msg.sender] = d1;\\r\\n        s_players.push(msg.sender);\\r\\n    }\\r\\n\\r\\n    function getDetailCount() public view returns(uint256){\\r\\n        return s_players.length;\\r\\n    }\\r\\n\\r\\n    function ShowDetails(uint256 index) public view returns(Details memory){\\r\\n        address toFind = s_players[index];\\r\\n        return s_details[toFind];\\r\\n    }\\r\\n\\r\\n    function getEntranceFees()public view returns(uint256){\\r\\n        return i_entranceFees;\\r\\n    }\\r\\n\\r\\n    function ShowTotalFunds()public view returns(uint256){\\r\\n        return address(this).balance;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x38c900853471afe2ac77605ceedf40b8bada777782963ec172f4675fb36f1951\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610be5380380610be583398181016040528101906100329190610055565b8060808181525050506100a8565b60008151905061004f81610091565b92915050565b60006020828403121561006b5761006a61008c565b5b600061007984828501610040565b91505092915050565b6000819050919050565b600080fd5b61009a81610082565b81146100a557600080fd5b50565b608051610b146100d1600039600081816103170152818161034501526103eb0152610b146000f3fe60806040526004361061004a5760003560e01c80632a7332891461004f5780634a26d4f41461008c5780639ff3d06e146100b7578063e4864d53146100e2578063f126b6b6146100fe575b600080fd5b34801561005b57600080fd5b5061007660048036038101906100719190610795565b610129565b6040516100839190610892565b60405180910390f35b34801561009857600080fd5b506100a1610313565b6040516100ae91906108b4565b60405180910390f35b3480156100c357600080fd5b506100cc61033b565b6040516100d991906108b4565b60405180910390f35b6100fc60048036038101906100f791906106f6565b610343565b005b34801561010a57600080fd5b50610113610580565b60405161012091906108b4565b60405180910390f35b61013161058d565b60006001838154811061014757610146610a2d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820180546101cd9061099b565b80601f01602080910402602001604051908101604052809291908181526020018280546101f99061099b565b80156102465780601f1061021b57610100808354040283529160200191610246565b820191906000526020600020905b81548152906001019060200180831161022957829003601f168201915b505050505081526020016001820160009054906101000a900461ffff1661ffff1661ffff168152602001600282015481526020016003820180546102899061099b565b80601f01602080910402602001604051908101604052809291908181526020018280546102b59061099b565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b505050505081525050915050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600047905090565b7f0000000000000000000000000000000000000000000000000000000000000000341061057a5760128361ffff1610156103a9576040517fe98c86bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b601960018054905011156103e9576040517fc27a535d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000341015610443576040517fb34b091700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060405180608001604052808681526020018561ffff168152602001848152602001838152509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906104c79291906105b9565b5060208201518160010160006101000a81548161ffff021916908361ffff1602179055506040820151816002015560608201518160030190805190602001906105119291906105b9565b509050506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b50505050565b6000600180549050905090565b604051806080016040528060608152602001600061ffff16815260200160008152602001606081525090565b8280546105c59061099b565b90600052602060002090601f0160209004810192826105e7576000855561062e565b82601f1061060057805160ff191683800117855561062e565b8280016001018555821561062e579182015b8281111561062d578251825591602001919060010190610612565b5b50905061063b919061063f565b5090565b5b80821115610658576000816000905550600101610640565b5090565b600061066f61066a846108f4565b6108cf565b90508281526020810184848401111561068b5761068a610a90565b5b610696848285610959565b509392505050565b600082601f8301126106b3576106b2610a8b565b5b81356106c384826020860161065c565b91505092915050565b6000813590506106db81610ab0565b92915050565b6000813590506106f081610ac7565b92915050565b600080600080608085870312156107105761070f610a9a565b5b600085013567ffffffffffffffff81111561072e5761072d610a95565b5b61073a8782880161069e565b945050602061074b878288016106cc565b935050604061075c878288016106e1565b925050606085013567ffffffffffffffff81111561077d5761077c610a95565b5b6107898782880161069e565b91505092959194509250565b6000602082840312156107ab576107aa610a9a565b5b60006107b9848285016106e1565b91505092915050565b60006107cd82610925565b6107d78185610930565b93506107e7818560208601610968565b6107f081610a9f565b840191505092915050565b6000608083016000830151848203600086015261081882826107c2565b915050602083015161082d6020860182610865565b5060408301516108406040860182610874565b506060830151848203606086015261085882826107c2565b9150508091505092915050565b61086e81610941565b82525050565b61087d8161094f565b82525050565b61088c8161094f565b82525050565b600060208201905081810360008301526108ac81846107fb565b905092915050565b60006020820190506108c96000830184610883565b92915050565b60006108d96108ea565b90506108e582826109cd565b919050565b6000604051905090565b600067ffffffffffffffff82111561090f5761090e610a5c565b5b61091882610a9f565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061ffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561098657808201518184015260208101905061096b565b83811115610995576000848401525b50505050565b600060028204905060018216806109b357607f821691505b602082108114156109c7576109c66109fe565b5b50919050565b6109d682610a9f565b810181811067ffffffffffffffff821117156109f5576109f4610a5c565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610ab981610941565b8114610ac457600080fd5b50565b610ad08161094f565b8114610adb57600080fd5b5056fea264697066735822122054337eacb67737d0d5673a9e987cbfa56ba28f3e5be8e92e79f039aeafd4df9f64736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061004a5760003560e01c80632a7332891461004f5780634a26d4f41461008c5780639ff3d06e146100b7578063e4864d53146100e2578063f126b6b6146100fe575b600080fd5b34801561005b57600080fd5b5061007660048036038101906100719190610795565b610129565b6040516100839190610892565b60405180910390f35b34801561009857600080fd5b506100a1610313565b6040516100ae91906108b4565b60405180910390f35b3480156100c357600080fd5b506100cc61033b565b6040516100d991906108b4565b60405180910390f35b6100fc60048036038101906100f791906106f6565b610343565b005b34801561010a57600080fd5b50610113610580565b60405161012091906108b4565b60405180910390f35b61013161058d565b60006001838154811061014757610146610a2d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820180546101cd9061099b565b80601f01602080910402602001604051908101604052809291908181526020018280546101f99061099b565b80156102465780601f1061021b57610100808354040283529160200191610246565b820191906000526020600020905b81548152906001019060200180831161022957829003601f168201915b505050505081526020016001820160009054906101000a900461ffff1661ffff1661ffff168152602001600282015481526020016003820180546102899061099b565b80601f01602080910402602001604051908101604052809291908181526020018280546102b59061099b565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b505050505081525050915050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600047905090565b7f0000000000000000000000000000000000000000000000000000000000000000341061057a5760128361ffff1610156103a9576040517fe98c86bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b601960018054905011156103e9576040517fc27a535d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000341015610443576040517fb34b091700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060405180608001604052808681526020018561ffff168152602001848152602001838152509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906104c79291906105b9565b5060208201518160010160006101000a81548161ffff021916908361ffff1602179055506040820151816002015560608201518160030190805190602001906105119291906105b9565b509050506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b50505050565b6000600180549050905090565b604051806080016040528060608152602001600061ffff16815260200160008152602001606081525090565b8280546105c59061099b565b90600052602060002090601f0160209004810192826105e7576000855561062e565b82601f1061060057805160ff191683800117855561062e565b8280016001018555821561062e579182015b8281111561062d578251825591602001919060010190610612565b5b50905061063b919061063f565b5090565b5b80821115610658576000816000905550600101610640565b5090565b600061066f61066a846108f4565b6108cf565b90508281526020810184848401111561068b5761068a610a90565b5b610696848285610959565b509392505050565b600082601f8301126106b3576106b2610a8b565b5b81356106c384826020860161065c565b91505092915050565b6000813590506106db81610ab0565b92915050565b6000813590506106f081610ac7565b92915050565b600080600080608085870312156107105761070f610a9a565b5b600085013567ffffffffffffffff81111561072e5761072d610a95565b5b61073a8782880161069e565b945050602061074b878288016106cc565b935050604061075c878288016106e1565b925050606085013567ffffffffffffffff81111561077d5761077c610a95565b5b6107898782880161069e565b91505092959194509250565b6000602082840312156107ab576107aa610a9a565b5b60006107b9848285016106e1565b91505092915050565b60006107cd82610925565b6107d78185610930565b93506107e7818560208601610968565b6107f081610a9f565b840191505092915050565b6000608083016000830151848203600086015261081882826107c2565b915050602083015161082d6020860182610865565b5060408301516108406040860182610874565b506060830151848203606086015261085882826107c2565b9150508091505092915050565b61086e81610941565b82525050565b61087d8161094f565b82525050565b61088c8161094f565b82525050565b600060208201905081810360008301526108ac81846107fb565b905092915050565b60006020820190506108c96000830184610883565b92915050565b60006108d96108ea565b90506108e582826109cd565b919050565b6000604051905090565b600067ffffffffffffffff82111561090f5761090e610a5c565b5b61091882610a9f565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061ffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561098657808201518184015260208101905061096b565b83811115610995576000848401525b50505050565b600060028204905060018216806109b357607f821691505b602082108114156109c7576109c66109fe565b5b50919050565b6109d682610a9f565b810181811067ffffffffffffffff821117156109f5576109f4610a5c565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610ab981610941565b8114610ac457600080fd5b50565b610ad08161094f565b8114610adb57600080fd5b5056fea264697066735822122054337eacb67737d0d5673a9e987cbfa56ba28f3e5be8e92e79f039aeafd4df9f64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 23,
        "contract": "contracts/details.sol:data",
        "label": "s_details",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(Details)18_storage)"
      },
      {
        "astId": 26,
        "contract": "contracts/details.sol:data",
        "label": "s_players",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_struct(Details)18_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct data.Details)",
        "numberOfBytes": "32",
        "value": "t_struct(Details)18_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Details)18_storage": {
        "encoding": "inplace",
        "label": "struct data.Details",
        "members": [
          {
            "astId": 11,
            "contract": "contracts/details.sol:data",
            "label": "Name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 13,
            "contract": "contracts/details.sol:data",
            "label": "Age",
            "offset": 0,
            "slot": "1",
            "type": "t_uint16"
          },
          {
            "astId": 15,
            "contract": "contracts/details.sol:data",
            "label": "Id",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 17,
            "contract": "contracts/details.sol:data",
            "label": "Address",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}